// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String    @unique
  image     String?
  posts     Post[]
  likes     Like[]
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Post {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  tags      String[]
  images    Image[]
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String    @db.ObjectId
  likes     Like[]
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Image {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  url       String
  postId    String   @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id])
  postId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())

  @@unique([postId, userId])
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
